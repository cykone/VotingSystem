// <auto-generated />
using Ft.VotingSystem.Backend.Dataaccess.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Ft.VotingSystem.Backend.Migrations
{
    [DbContext(typeof(ElectionDbContext))]
    partial class ElectionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ft.VotingSystem.Backend.Dataaccess.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ElectionId");

                    b.Property<string>("Email");

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("Ft.VotingSystem.Backend.Dataaccess.Election", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("Ft.VotingSystem.Backend.Dataaccess.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<Guid?>("ElectionId");

                    b.Property<Guid?>("VotedForId");

                    b.Property<Guid?>("VoterId");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.HasIndex("VotedForId");

                    b.HasIndex("VoterId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("Ft.VotingSystem.Backend.Dataaccess.Voter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.HasKey("Id");

                    b.ToTable("Voters");
                });

            modelBuilder.Entity("Ft.VotingSystem.Backend.Dataaccess.Candidate", b =>
                {
                    b.HasOne("Ft.VotingSystem.Backend.Dataaccess.Election")
                        .WithMany("Candidates")
                        .HasForeignKey("ElectionId");
                });

            modelBuilder.Entity("Ft.VotingSystem.Backend.Dataaccess.Vote", b =>
                {
                    b.HasOne("Ft.VotingSystem.Backend.Dataaccess.Election", "Election")
                        .WithMany("Votes")
                        .HasForeignKey("ElectionId");

                    b.HasOne("Ft.VotingSystem.Backend.Dataaccess.Candidate", "VotedFor")
                        .WithMany()
                        .HasForeignKey("VotedForId");

                    b.HasOne("Ft.VotingSystem.Backend.Dataaccess.Voter", "Voter")
                        .WithMany()
                        .HasForeignKey("VoterId");
                });
#pragma warning restore 612, 618
        }
    }
}
